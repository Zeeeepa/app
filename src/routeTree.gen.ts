/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WaitlistImport } from './routes/waitlist'
import { Route as UsageImport } from './routes/usage'
import { Route as SettingsImport } from './routes/settings'
import { Route as PricingImport } from './routes/pricing'
import { Route as OnboardingCallImport } from './routes/onboarding-call'
import { Route as ModelsImport } from './routes/models'
import { Route as HomeImport } from './routes/home'
import { Route as ExploreImport } from './routes/explore'
import { Route as DeploymentsImport } from './routes/deployments'
import { Route as AssetsImport } from './routes/assets'
import { Route as ApiKeysImport } from './routes/api-keys'
import { Route as IndexImport } from './routes/index'
import { Route as WorkflowsIndexImport } from './routes/workflows/index'
import { Route as SessionsIndexImport } from './routes/sessions/index'
import { Route as OrganizationProfileIndexImport } from './routes/organization-profile/index'
import { Route as MachinesIndexImport } from './routes/machines/index'
import { Route as AnalyticsIndexImport } from './routes/analytics/index'
import { Route as AuthSignUpImport } from './routes/auth/sign-up'
import { Route as AuthSignInImport } from './routes/auth/sign-in'
import { Route as SessionsSessionIdIndexImport } from './routes/sessions/$sessionId/index'
import { Route as OrganizationProfileOrganizationMembersIndexImport } from './routes/organization-profile/organization-members/index'
import { Route as WorkflowsWorkflowIdViewImport } from './routes/workflows/$workflowId/$view'
import { Route as SessionsSessionIdWorkflowIdImport } from './routes/sessions/$sessionId/$workflowId'
import { Route as MachinesMachineIdActivityImport } from './routes/machines/$machineId/activity'
import { Route as MachinesMachineIdMachineVersionIdImport } from './routes/machines/$machineId/$machineVersionId'
import { Route as MachinesMachineIdHistoryIndexImport } from './routes/machines/$machineId/history/index'

// Create Virtual Routes

const MachinesMachineIdIndexLazyImport = createFileRoute(
  '/machines/$machineId/',
)()
const ShareUserSlugLazyImport = createFileRoute('/share/$user/$slug')()

// Create/Update Routes

const WaitlistRoute = WaitlistImport.update({
  id: '/waitlist',
  path: '/waitlist',
  getParentRoute: () => rootRoute,
} as any)

const UsageRoute = UsageImport.update({
  id: '/usage',
  path: '/usage',
  getParentRoute: () => rootRoute,
} as any)

const SettingsRoute = SettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any)

const PricingRoute = PricingImport.update({
  id: '/pricing',
  path: '/pricing',
  getParentRoute: () => rootRoute,
} as any)

const OnboardingCallRoute = OnboardingCallImport.update({
  id: '/onboarding-call',
  path: '/onboarding-call',
  getParentRoute: () => rootRoute,
} as any)

const ModelsRoute = ModelsImport.update({
  id: '/models',
  path: '/models',
  getParentRoute: () => rootRoute,
} as any)

const HomeRoute = HomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => rootRoute,
} as any)

const ExploreRoute = ExploreImport.update({
  id: '/explore',
  path: '/explore',
  getParentRoute: () => rootRoute,
} as any)

const DeploymentsRoute = DeploymentsImport.update({
  id: '/deployments',
  path: '/deployments',
  getParentRoute: () => rootRoute,
} as any)

const AssetsRoute = AssetsImport.update({
  id: '/assets',
  path: '/assets',
  getParentRoute: () => rootRoute,
} as any)

const ApiKeysRoute = ApiKeysImport.update({
  id: '/api-keys',
  path: '/api-keys',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const WorkflowsIndexRoute = WorkflowsIndexImport.update({
  id: '/workflows/',
  path: '/workflows/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/workflows/index.lazy').then((d) => d.Route),
)

const SessionsIndexRoute = SessionsIndexImport.update({
  id: '/sessions/',
  path: '/sessions/',
  getParentRoute: () => rootRoute,
} as any)

const OrganizationProfileIndexRoute = OrganizationProfileIndexImport.update({
  id: '/organization-profile/',
  path: '/organization-profile/',
  getParentRoute: () => rootRoute,
} as any)

const MachinesIndexRoute = MachinesIndexImport.update({
  id: '/machines/',
  path: '/machines/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/machines/index.lazy').then((d) => d.Route),
)

const AnalyticsIndexRoute = AnalyticsIndexImport.update({
  id: '/analytics/',
  path: '/analytics/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/analytics/index.lazy').then((d) => d.Route),
)

const AuthSignUpRoute = AuthSignUpImport.update({
  id: '/auth/sign-up',
  path: '/auth/sign-up',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignInRoute = AuthSignInImport.update({
  id: '/auth/sign-in',
  path: '/auth/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const MachinesMachineIdIndexLazyRoute = MachinesMachineIdIndexLazyImport.update(
  {
    id: '/machines/$machineId/',
    path: '/machines/$machineId/',
    getParentRoute: () => rootRoute,
  } as any,
).lazy(() =>
  import('./routes/machines/$machineId/index.lazy').then((d) => d.Route),
)

const SessionsSessionIdIndexRoute = SessionsSessionIdIndexImport.update({
  id: '/sessions/$sessionId/',
  path: '/sessions/$sessionId/',
  getParentRoute: () => rootRoute,
} as any)

const OrganizationProfileOrganizationMembersIndexRoute =
  OrganizationProfileOrganizationMembersIndexImport.update({
    id: '/organization-profile/organization-members/',
    path: '/organization-profile/organization-members/',
    getParentRoute: () => rootRoute,
  } as any)

const ShareUserSlugLazyRoute = ShareUserSlugLazyImport.update({
  id: '/share/$user/$slug',
  path: '/share/$user/$slug',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/share/$user/$slug.lazy').then((d) => d.Route),
)

const WorkflowsWorkflowIdViewRoute = WorkflowsWorkflowIdViewImport.update({
  id: '/workflows/$workflowId/$view',
  path: '/workflows/$workflowId/$view',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/workflows/$workflowId/$view.lazy').then((d) => d.Route),
)

const SessionsSessionIdWorkflowIdRoute =
  SessionsSessionIdWorkflowIdImport.update({
    id: '/sessions/$sessionId/$workflowId',
    path: '/sessions/$sessionId/$workflowId',
    getParentRoute: () => rootRoute,
  } as any)

const MachinesMachineIdActivityRoute = MachinesMachineIdActivityImport.update({
  id: '/machines/$machineId/activity',
  path: '/machines/$machineId/activity',
  getParentRoute: () => rootRoute,
} as any)

const MachinesMachineIdMachineVersionIdRoute =
  MachinesMachineIdMachineVersionIdImport.update({
    id: '/machines/$machineId/$machineVersionId',
    path: '/machines/$machineId/$machineVersionId',
    getParentRoute: () => rootRoute,
  } as any)

const MachinesMachineIdHistoryIndexRoute =
  MachinesMachineIdHistoryIndexImport.update({
    id: '/machines/$machineId/history/',
    path: '/machines/$machineId/history/',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/api-keys': {
      id: '/api-keys'
      path: '/api-keys'
      fullPath: '/api-keys'
      preLoaderRoute: typeof ApiKeysImport
      parentRoute: typeof rootRoute
    }
    '/assets': {
      id: '/assets'
      path: '/assets'
      fullPath: '/assets'
      preLoaderRoute: typeof AssetsImport
      parentRoute: typeof rootRoute
    }
    '/deployments': {
      id: '/deployments'
      path: '/deployments'
      fullPath: '/deployments'
      preLoaderRoute: typeof DeploymentsImport
      parentRoute: typeof rootRoute
    }
    '/explore': {
      id: '/explore'
      path: '/explore'
      fullPath: '/explore'
      preLoaderRoute: typeof ExploreImport
      parentRoute: typeof rootRoute
    }
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeImport
      parentRoute: typeof rootRoute
    }
    '/models': {
      id: '/models'
      path: '/models'
      fullPath: '/models'
      preLoaderRoute: typeof ModelsImport
      parentRoute: typeof rootRoute
    }
    '/onboarding-call': {
      id: '/onboarding-call'
      path: '/onboarding-call'
      fullPath: '/onboarding-call'
      preLoaderRoute: typeof OnboardingCallImport
      parentRoute: typeof rootRoute
    }
    '/pricing': {
      id: '/pricing'
      path: '/pricing'
      fullPath: '/pricing'
      preLoaderRoute: typeof PricingImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsImport
      parentRoute: typeof rootRoute
    }
    '/usage': {
      id: '/usage'
      path: '/usage'
      fullPath: '/usage'
      preLoaderRoute: typeof UsageImport
      parentRoute: typeof rootRoute
    }
    '/waitlist': {
      id: '/waitlist'
      path: '/waitlist'
      fullPath: '/waitlist'
      preLoaderRoute: typeof WaitlistImport
      parentRoute: typeof rootRoute
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInImport
      parentRoute: typeof rootRoute
    }
    '/auth/sign-up': {
      id: '/auth/sign-up'
      path: '/auth/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpImport
      parentRoute: typeof rootRoute
    }
    '/analytics/': {
      id: '/analytics/'
      path: '/analytics'
      fullPath: '/analytics'
      preLoaderRoute: typeof AnalyticsIndexImport
      parentRoute: typeof rootRoute
    }
    '/machines/': {
      id: '/machines/'
      path: '/machines'
      fullPath: '/machines'
      preLoaderRoute: typeof MachinesIndexImport
      parentRoute: typeof rootRoute
    }
    '/organization-profile/': {
      id: '/organization-profile/'
      path: '/organization-profile'
      fullPath: '/organization-profile'
      preLoaderRoute: typeof OrganizationProfileIndexImport
      parentRoute: typeof rootRoute
    }
    '/sessions/': {
      id: '/sessions/'
      path: '/sessions'
      fullPath: '/sessions'
      preLoaderRoute: typeof SessionsIndexImport
      parentRoute: typeof rootRoute
    }
    '/workflows/': {
      id: '/workflows/'
      path: '/workflows'
      fullPath: '/workflows'
      preLoaderRoute: typeof WorkflowsIndexImport
      parentRoute: typeof rootRoute
    }
    '/machines/$machineId/$machineVersionId': {
      id: '/machines/$machineId/$machineVersionId'
      path: '/machines/$machineId/$machineVersionId'
      fullPath: '/machines/$machineId/$machineVersionId'
      preLoaderRoute: typeof MachinesMachineIdMachineVersionIdImport
      parentRoute: typeof rootRoute
    }
    '/machines/$machineId/activity': {
      id: '/machines/$machineId/activity'
      path: '/machines/$machineId/activity'
      fullPath: '/machines/$machineId/activity'
      preLoaderRoute: typeof MachinesMachineIdActivityImport
      parentRoute: typeof rootRoute
    }
    '/sessions/$sessionId/$workflowId': {
      id: '/sessions/$sessionId/$workflowId'
      path: '/sessions/$sessionId/$workflowId'
      fullPath: '/sessions/$sessionId/$workflowId'
      preLoaderRoute: typeof SessionsSessionIdWorkflowIdImport
      parentRoute: typeof rootRoute
    }
    '/workflows/$workflowId/$view': {
      id: '/workflows/$workflowId/$view'
      path: '/workflows/$workflowId/$view'
      fullPath: '/workflows/$workflowId/$view'
      preLoaderRoute: typeof WorkflowsWorkflowIdViewImport
      parentRoute: typeof rootRoute
    }
    '/share/$user/$slug': {
      id: '/share/$user/$slug'
      path: '/share/$user/$slug'
      fullPath: '/share/$user/$slug'
      preLoaderRoute: typeof ShareUserSlugLazyImport
      parentRoute: typeof rootRoute
    }
    '/organization-profile/organization-members/': {
      id: '/organization-profile/organization-members/'
      path: '/organization-profile/organization-members'
      fullPath: '/organization-profile/organization-members'
      preLoaderRoute: typeof OrganizationProfileOrganizationMembersIndexImport
      parentRoute: typeof rootRoute
    }
    '/sessions/$sessionId/': {
      id: '/sessions/$sessionId/'
      path: '/sessions/$sessionId'
      fullPath: '/sessions/$sessionId'
      preLoaderRoute: typeof SessionsSessionIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/machines/$machineId/': {
      id: '/machines/$machineId/'
      path: '/machines/$machineId'
      fullPath: '/machines/$machineId'
      preLoaderRoute: typeof MachinesMachineIdIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/machines/$machineId/history/': {
      id: '/machines/$machineId/history/'
      path: '/machines/$machineId/history'
      fullPath: '/machines/$machineId/history'
      preLoaderRoute: typeof MachinesMachineIdHistoryIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/api-keys': typeof ApiKeysRoute
  '/assets': typeof AssetsRoute
  '/deployments': typeof DeploymentsRoute
  '/explore': typeof ExploreRoute
  '/home': typeof HomeRoute
  '/models': typeof ModelsRoute
  '/onboarding-call': typeof OnboardingCallRoute
  '/pricing': typeof PricingRoute
  '/settings': typeof SettingsRoute
  '/usage': typeof UsageRoute
  '/waitlist': typeof WaitlistRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/analytics': typeof AnalyticsIndexRoute
  '/machines': typeof MachinesIndexRoute
  '/organization-profile': typeof OrganizationProfileIndexRoute
  '/sessions': typeof SessionsIndexRoute
  '/workflows': typeof WorkflowsIndexRoute
  '/machines/$machineId/$machineVersionId': typeof MachinesMachineIdMachineVersionIdRoute
  '/machines/$machineId/activity': typeof MachinesMachineIdActivityRoute
  '/sessions/$sessionId/$workflowId': typeof SessionsSessionIdWorkflowIdRoute
  '/workflows/$workflowId/$view': typeof WorkflowsWorkflowIdViewRoute
  '/share/$user/$slug': typeof ShareUserSlugLazyRoute
  '/organization-profile/organization-members': typeof OrganizationProfileOrganizationMembersIndexRoute
  '/sessions/$sessionId': typeof SessionsSessionIdIndexRoute
  '/machines/$machineId': typeof MachinesMachineIdIndexLazyRoute
  '/machines/$machineId/history': typeof MachinesMachineIdHistoryIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/api-keys': typeof ApiKeysRoute
  '/assets': typeof AssetsRoute
  '/deployments': typeof DeploymentsRoute
  '/explore': typeof ExploreRoute
  '/home': typeof HomeRoute
  '/models': typeof ModelsRoute
  '/onboarding-call': typeof OnboardingCallRoute
  '/pricing': typeof PricingRoute
  '/settings': typeof SettingsRoute
  '/usage': typeof UsageRoute
  '/waitlist': typeof WaitlistRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/analytics': typeof AnalyticsIndexRoute
  '/machines': typeof MachinesIndexRoute
  '/organization-profile': typeof OrganizationProfileIndexRoute
  '/sessions': typeof SessionsIndexRoute
  '/workflows': typeof WorkflowsIndexRoute
  '/machines/$machineId/$machineVersionId': typeof MachinesMachineIdMachineVersionIdRoute
  '/machines/$machineId/activity': typeof MachinesMachineIdActivityRoute
  '/sessions/$sessionId/$workflowId': typeof SessionsSessionIdWorkflowIdRoute
  '/workflows/$workflowId/$view': typeof WorkflowsWorkflowIdViewRoute
  '/share/$user/$slug': typeof ShareUserSlugLazyRoute
  '/organization-profile/organization-members': typeof OrganizationProfileOrganizationMembersIndexRoute
  '/sessions/$sessionId': typeof SessionsSessionIdIndexRoute
  '/machines/$machineId': typeof MachinesMachineIdIndexLazyRoute
  '/machines/$machineId/history': typeof MachinesMachineIdHistoryIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/api-keys': typeof ApiKeysRoute
  '/assets': typeof AssetsRoute
  '/deployments': typeof DeploymentsRoute
  '/explore': typeof ExploreRoute
  '/home': typeof HomeRoute
  '/models': typeof ModelsRoute
  '/onboarding-call': typeof OnboardingCallRoute
  '/pricing': typeof PricingRoute
  '/settings': typeof SettingsRoute
  '/usage': typeof UsageRoute
  '/waitlist': typeof WaitlistRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/analytics/': typeof AnalyticsIndexRoute
  '/machines/': typeof MachinesIndexRoute
  '/organization-profile/': typeof OrganizationProfileIndexRoute
  '/sessions/': typeof SessionsIndexRoute
  '/workflows/': typeof WorkflowsIndexRoute
  '/machines/$machineId/$machineVersionId': typeof MachinesMachineIdMachineVersionIdRoute
  '/machines/$machineId/activity': typeof MachinesMachineIdActivityRoute
  '/sessions/$sessionId/$workflowId': typeof SessionsSessionIdWorkflowIdRoute
  '/workflows/$workflowId/$view': typeof WorkflowsWorkflowIdViewRoute
  '/share/$user/$slug': typeof ShareUserSlugLazyRoute
  '/organization-profile/organization-members/': typeof OrganizationProfileOrganizationMembersIndexRoute
  '/sessions/$sessionId/': typeof SessionsSessionIdIndexRoute
  '/machines/$machineId/': typeof MachinesMachineIdIndexLazyRoute
  '/machines/$machineId/history/': typeof MachinesMachineIdHistoryIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/api-keys'
    | '/assets'
    | '/deployments'
    | '/explore'
    | '/home'
    | '/models'
    | '/onboarding-call'
    | '/pricing'
    | '/settings'
    | '/usage'
    | '/waitlist'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/analytics'
    | '/machines'
    | '/organization-profile'
    | '/sessions'
    | '/workflows'
    | '/machines/$machineId/$machineVersionId'
    | '/machines/$machineId/activity'
    | '/sessions/$sessionId/$workflowId'
    | '/workflows/$workflowId/$view'
    | '/share/$user/$slug'
    | '/organization-profile/organization-members'
    | '/sessions/$sessionId'
    | '/machines/$machineId'
    | '/machines/$machineId/history'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/api-keys'
    | '/assets'
    | '/deployments'
    | '/explore'
    | '/home'
    | '/models'
    | '/onboarding-call'
    | '/pricing'
    | '/settings'
    | '/usage'
    | '/waitlist'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/analytics'
    | '/machines'
    | '/organization-profile'
    | '/sessions'
    | '/workflows'
    | '/machines/$machineId/$machineVersionId'
    | '/machines/$machineId/activity'
    | '/sessions/$sessionId/$workflowId'
    | '/workflows/$workflowId/$view'
    | '/share/$user/$slug'
    | '/organization-profile/organization-members'
    | '/sessions/$sessionId'
    | '/machines/$machineId'
    | '/machines/$machineId/history'
  id:
    | '__root__'
    | '/'
    | '/api-keys'
    | '/assets'
    | '/deployments'
    | '/explore'
    | '/home'
    | '/models'
    | '/onboarding-call'
    | '/pricing'
    | '/settings'
    | '/usage'
    | '/waitlist'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/analytics/'
    | '/machines/'
    | '/organization-profile/'
    | '/sessions/'
    | '/workflows/'
    | '/machines/$machineId/$machineVersionId'
    | '/machines/$machineId/activity'
    | '/sessions/$sessionId/$workflowId'
    | '/workflows/$workflowId/$view'
    | '/share/$user/$slug'
    | '/organization-profile/organization-members/'
    | '/sessions/$sessionId/'
    | '/machines/$machineId/'
    | '/machines/$machineId/history/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ApiKeysRoute: typeof ApiKeysRoute
  AssetsRoute: typeof AssetsRoute
  DeploymentsRoute: typeof DeploymentsRoute
  ExploreRoute: typeof ExploreRoute
  HomeRoute: typeof HomeRoute
  ModelsRoute: typeof ModelsRoute
  OnboardingCallRoute: typeof OnboardingCallRoute
  PricingRoute: typeof PricingRoute
  SettingsRoute: typeof SettingsRoute
  UsageRoute: typeof UsageRoute
  WaitlistRoute: typeof WaitlistRoute
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
  AnalyticsIndexRoute: typeof AnalyticsIndexRoute
  MachinesIndexRoute: typeof MachinesIndexRoute
  OrganizationProfileIndexRoute: typeof OrganizationProfileIndexRoute
  SessionsIndexRoute: typeof SessionsIndexRoute
  WorkflowsIndexRoute: typeof WorkflowsIndexRoute
  MachinesMachineIdMachineVersionIdRoute: typeof MachinesMachineIdMachineVersionIdRoute
  MachinesMachineIdActivityRoute: typeof MachinesMachineIdActivityRoute
  SessionsSessionIdWorkflowIdRoute: typeof SessionsSessionIdWorkflowIdRoute
  WorkflowsWorkflowIdViewRoute: typeof WorkflowsWorkflowIdViewRoute
  ShareUserSlugLazyRoute: typeof ShareUserSlugLazyRoute
  OrganizationProfileOrganizationMembersIndexRoute: typeof OrganizationProfileOrganizationMembersIndexRoute
  SessionsSessionIdIndexRoute: typeof SessionsSessionIdIndexRoute
  MachinesMachineIdIndexLazyRoute: typeof MachinesMachineIdIndexLazyRoute
  MachinesMachineIdHistoryIndexRoute: typeof MachinesMachineIdHistoryIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ApiKeysRoute: ApiKeysRoute,
  AssetsRoute: AssetsRoute,
  DeploymentsRoute: DeploymentsRoute,
  ExploreRoute: ExploreRoute,
  HomeRoute: HomeRoute,
  ModelsRoute: ModelsRoute,
  OnboardingCallRoute: OnboardingCallRoute,
  PricingRoute: PricingRoute,
  SettingsRoute: SettingsRoute,
  UsageRoute: UsageRoute,
  WaitlistRoute: WaitlistRoute,
  AuthSignInRoute: AuthSignInRoute,
  AuthSignUpRoute: AuthSignUpRoute,
  AnalyticsIndexRoute: AnalyticsIndexRoute,
  MachinesIndexRoute: MachinesIndexRoute,
  OrganizationProfileIndexRoute: OrganizationProfileIndexRoute,
  SessionsIndexRoute: SessionsIndexRoute,
  WorkflowsIndexRoute: WorkflowsIndexRoute,
  MachinesMachineIdMachineVersionIdRoute:
    MachinesMachineIdMachineVersionIdRoute,
  MachinesMachineIdActivityRoute: MachinesMachineIdActivityRoute,
  SessionsSessionIdWorkflowIdRoute: SessionsSessionIdWorkflowIdRoute,
  WorkflowsWorkflowIdViewRoute: WorkflowsWorkflowIdViewRoute,
  ShareUserSlugLazyRoute: ShareUserSlugLazyRoute,
  OrganizationProfileOrganizationMembersIndexRoute:
    OrganizationProfileOrganizationMembersIndexRoute,
  SessionsSessionIdIndexRoute: SessionsSessionIdIndexRoute,
  MachinesMachineIdIndexLazyRoute: MachinesMachineIdIndexLazyRoute,
  MachinesMachineIdHistoryIndexRoute: MachinesMachineIdHistoryIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/api-keys",
        "/assets",
        "/deployments",
        "/explore",
        "/home",
        "/models",
        "/onboarding-call",
        "/pricing",
        "/settings",
        "/usage",
        "/waitlist",
        "/auth/sign-in",
        "/auth/sign-up",
        "/analytics/",
        "/machines/",
        "/organization-profile/",
        "/sessions/",
        "/workflows/",
        "/machines/$machineId/$machineVersionId",
        "/machines/$machineId/activity",
        "/sessions/$sessionId/$workflowId",
        "/workflows/$workflowId/$view",
        "/share/$user/$slug",
        "/organization-profile/organization-members/",
        "/sessions/$sessionId/",
        "/machines/$machineId/",
        "/machines/$machineId/history/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/api-keys": {
      "filePath": "api-keys.tsx"
    },
    "/assets": {
      "filePath": "assets.tsx"
    },
    "/deployments": {
      "filePath": "deployments.tsx"
    },
    "/explore": {
      "filePath": "explore.tsx"
    },
    "/home": {
      "filePath": "home.tsx"
    },
    "/models": {
      "filePath": "models.tsx"
    },
    "/onboarding-call": {
      "filePath": "onboarding-call.tsx"
    },
    "/pricing": {
      "filePath": "pricing.tsx"
    },
    "/settings": {
      "filePath": "settings.tsx"
    },
    "/usage": {
      "filePath": "usage.tsx"
    },
    "/waitlist": {
      "filePath": "waitlist.tsx"
    },
    "/auth/sign-in": {
      "filePath": "auth/sign-in.tsx"
    },
    "/auth/sign-up": {
      "filePath": "auth/sign-up.tsx"
    },
    "/analytics/": {
      "filePath": "analytics/index.tsx"
    },
    "/machines/": {
      "filePath": "machines/index.tsx"
    },
    "/organization-profile/": {
      "filePath": "organization-profile/index.tsx"
    },
    "/sessions/": {
      "filePath": "sessions/index.tsx"
    },
    "/workflows/": {
      "filePath": "workflows/index.tsx"
    },
    "/machines/$machineId/$machineVersionId": {
      "filePath": "machines/$machineId/$machineVersionId.tsx"
    },
    "/machines/$machineId/activity": {
      "filePath": "machines/$machineId/activity.tsx"
    },
    "/sessions/$sessionId/$workflowId": {
      "filePath": "sessions/$sessionId/$workflowId.tsx"
    },
    "/workflows/$workflowId/$view": {
      "filePath": "workflows/$workflowId/$view.tsx"
    },
    "/share/$user/$slug": {
      "filePath": "share/$user/$slug.lazy.tsx"
    },
    "/organization-profile/organization-members/": {
      "filePath": "organization-profile/organization-members/index.tsx"
    },
    "/sessions/$sessionId/": {
      "filePath": "sessions/$sessionId/index.tsx"
    },
    "/machines/$machineId/": {
      "filePath": "machines/$machineId/index.lazy.tsx"
    },
    "/machines/$machineId/history/": {
      "filePath": "machines/$machineId/history/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
